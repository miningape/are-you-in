import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "../globals.css";
import { UserProvider } from "@auth0/nextjs-auth0/client";
import { getSession } from "@auth0/nextjs-auth0";
import { UserClaims } from "../api/auth/[auth0]/route";
import { redirect } from "next/navigation";
import { prisma } from "@/db";
import { AuthProvider } from "./AuthProvider";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const session = await getSession();

  const res = UserClaims.safeParse(session?.user);
  if (!res.success) {
    redirect("/api/auth/logout");
  }

  const auth = await prisma.userAuthorization.findUnique({
    where: {
      email: res.data.email,
    },
    include: {
      user: {
        include: {
          company: {
            include: {
              settings: true,
            },
          },
        },
      },
    },
  });

  if (auth === null || auth.user.company.name === null) {
    console.log("Redirecting");
    redirect("http://localhost:3000/setup");
  }

  return (
    <UserProvider>
      <AuthProvider auth={auth}>
        <html lang="en">
          <body className={inter.className}>{children}</body>
        </html>
      </AuthProvider>
    </UserProvider>
  );
}
